// Code generated by goctl. DO NOT EDIT!
// Source: book.proto

package bookclient

import (
	"context"

	"bookstore/rpc/book/book"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddReq  = book.AddReq
	AddResp = book.AddResp

	Book interface {
		Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error)
		Update(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error)
	}

	defaultBook struct {
		cli zrpc.Client
	}
)

func NewBook(cli zrpc.Client) Book {
	return &defaultBook{
		cli: cli,
	}
}

func (m *defaultBook) Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error) {
	client := book.NewBookClient(m.cli.Conn())
	return client.Add(ctx, in, opts...)
}

func (m *defaultBook) Update(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error) {
	client := book.NewBookClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}
