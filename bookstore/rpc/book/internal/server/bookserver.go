// Code generated by goctl. DO NOT EDIT!
// Source: book.proto

package server

import (
	"bookstore/rpc/book/internal/command"
	"context"
	"fmt"

	"bookstore/rpc/book/book"
	"bookstore/rpc/book/internal/svc"
)

type BookServer struct {
	svcCtx *svc.ServiceContext
}

func NewBookServer(svcCtx *svc.ServiceContext) *BookServer {
	return &BookServer{
		svcCtx: svcCtx,
	}
}

func (s *BookServer) Add(ctx context.Context, in *book.AddReq) (*book.AddResp, error) {
	cmd := command.BookCreateCommand{Book: in.Book, Price: in.Price}
	r, err := command.BookCreateCommandHandle(ctx, cmd)
	if err != nil {
		fmt.Println("---", err)
	}
	rr := r.(*command.BookAggregate)
	return &book.AddResp{Id: rr.AbstractAggregate.Id}, nil
}

func (s *BookServer) UpdatePrice(ctx context.Context, in *book.UpdatePriceReq) (*book.AddResp, error) {
	cmd := command.BookUpdateCommand{BookId: in.Id, Price: in.Price}
	r, err := command.BookUpdateCommandHandle(ctx, cmd)
	if err != nil {
		fmt.Println("---", err)
	}
	rr := r.(*command.BookAggregate)
	return &book.AddResp{Id: rr.AbstractAggregate.Id}, nil
}
